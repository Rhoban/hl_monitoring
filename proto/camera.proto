syntax="proto2";

package hl_monitoring;

/**
 * This file describes the principal messages used for describing Camera
 * properties and Pose for videos
 *
 * All notations are based on OpenCV formalism for Intrinsic and Extrinsic
 * parameters of the camera: https://docs.opencv.org/3.4.5/d9/d0c/group__calib3d.html
 *
 * The field referential is defined as follows:
 * - Zero: Center of field at ground level
 * - X-axis goes from center to opposite goal
 * - Y-axis goes from center toward left side of the field while facing opposite goal
 * - Z-axis points toward the roof
 *
 * The camera referential is defined as follows:
 * - Zero: At camera optical center
 * - X-axis: aligned with x-axis of the image
 * - Y-axis: aligned with y-axis of the image
 * - Z-axis: direction toward which the camera is pointing
 */

/**
 * Defines the intrinsic parameters of a camera.
 */
message IntrinsicParameters {
  required float focal_x = 1;
  required float focal_y = 2;
  required uint32 center_x = 3;
  required uint32 center_y = 4;
  required uint32 img_width = 5;
  required uint32 img_height = 6;
  repeated float distortion = 7;
}

message Pose3D {
  /**
   * Two valid options:
   * Size 0: unknown information
   * Size 4: quaternion [w,x,y,z]
   */ 
  repeated float rotation = 1;
  /**
   * Two valid options:
   * Size 0: unknown information
   * Size 3: [tx,ty,tz]
   */
  repeated float translation = 2;
}

message StaticCamera {
  required IntrinsicParameters parameters = 1;
  /**
   * The transformation from field referential to camera referential
   */
  required Pose3D field_to_camera = 2;
}

message TimedPose3D {
  /**
   * Time at which the pose was measured or estimated
   */
  required double time_stamp = 1;
  /**
   * The transformation from field referential to camera referential
   */
  required Pose3D field_to_camera = 2;
}

message DynamicCamera {
  required IntrinsicParameters parameters = 1;
  /**
   * Collection of poses associated with time_stamps
   */
  repeated TimedPose3D poses = 2;
}

message CameraState {
  oneof state {
    StaticCamera static_config = 1;
    DynamicCamera dynamic_config = 2;
  }
}